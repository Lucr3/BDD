  set search_path to unicorsi;
  
  --1a
  SELECT Matricola
FROM Studenti S
JOIN Esami ON Studente = Matricola
JOIN Corsi ON Corso = Corsi.id
JOIN CorsiDiLaurea ON CorsiDiLaurea.id = Corsi.CorsoDiLaurea
WHERE CorsiDiLaurea.Denominazione = 'Informatica'
AND Data BETWEEN '2010-06-01' AND '2010-06-30'
AND Corsi.Denominazione = 'Interfacce Grafiche'
AND EXISTS (
SELECT *
FROM Studenti
JOIN Esami ON Studente = Matricola
JOIN Corsi ON Corso = Corsi.id
JOIN CorsiDiLaurea ON CorsiDiLaurea.id = Corsi.CorsoDiLaurea
WHERE CorsiDiLaurea.Denominazione = 'Informatica'
AND Data BETWEEN '2010-06-01' AND '2010-06-30'
AND Corsi.Denominazione = 'Basi Di Dati 1'
AND Matricola = S.Matricola
);

--1b
SELECT DISTINCT S1.Matricola
FROM Studenti S1
		JOIN Studenti S2 ON S1.Matricola = S2.Matricola
		JOIN Esami E1 ON E1.Studente = S1.Matricola
		JOIN Esami E2 ON E2.Studente = S2.Matricola
		JOIN Corsi C1 On E1.Corso = C1.id
		JOIN Corsi C2 On E2.Corso = C2.id
		JOIN CorsiDiLaurea CL1 ON CL1.id = C1.CorsoDiLaurea
		JOIN CorsiDiLaurea CL2 ON CL2.id = C2.CorsoDiLaurea
WHERE  CL1.Denominazione = 'Informatica' 
AND E1.Data BETWEEN '2010-06-01' AND '2010-06-30'
AND C1.Denominazione = 'Interfacce Grafiche'
AND C2.Denominazione = 'Basi Di Dati 1';

--2 
SELECT DISTINCT Matricola 
FROM Studenti 
	JOIN Esami ON Studente = Matricola
	JOIN Corsi ON Corso = Corsi.id
	JOIN CorsiDiLaurea ON CorsiDiLaurea.id = Corsi.CorsoDiLaurea
WHERE CorsiDiLaurea.Denominazione = 'Informatica'
AND Corsi.Denominazione = 'Basi Di Dati 1'
AND voto >(Select AVG(Voto)
		   From Esami 
			 JOIN Corsi ON Corso = Corsi.id
			WHERE Corsi.Denominazione= 'Basi Di Dati 1'
		   );
		   
--3 
SELECT Nome, Cognome, COUNT(Corsi.Id) AS numerocorsi
FROM Professori P
JOIN Corsi ON P.id = Professore
GROUP BY P.Id
HAVING COUNT(*) >= ALL (
SELECT COUNT(*)
FROM Corsi P
GROUP BY Professore
);

--4
SELECT Nome, Cognome, P.Id
FROM Professori P
		JOIN Corsi ON P.id = Professore
		JOIN Esami ON Esami.Corso = Corsi.Id
GROUP BY P.Id, Corsi.id
HAVING AVG(Voto) >= ALL (
						SELECT AVG(Voto)
						FROM Esami 
								JOIN Corsi ON Corso = id
						GROUP BY id
						);
			
--5 
SELECT  C.id, Matricola, Esami.Voto
FROM Corsi C
		JOIN Esami  ON Corso = C.id
		JOIN Studenti ON Matricola = Studente
GROUP BY Matricola, C.id, Esami.voto
HAVING Esami.Voto < ALL (
						SELECT AVG(Voto)
						FROM Esami 
						WHERE Corso = C.id
						);
						
-- 6
SELECT  (P.Nome, P.Cognome) Professore, (S.Nome,S.Cognome) Studente
FROM Studenti S
		JOIN Esami  ON Studente = S.Matricola
		JOIN Professori P ON Relatore = P.id
GROUP BY P.id, S.Nome,S.Cognome
HAVING AVG(Voto) >= ALL (
						SELECT AVG(Voto)
						FROM Esami 
									JOIN Studenti  ON Matricola = Studente
						WHERE Relatore = P.id
						GROUP BY Studente
						);
--7
-- SELECT  (P.Nome, P.Cognome) Professore, Corsi.id
-- FROM Corsi
-- 		JOIN Esami  ON Corso = Corsi.id
-- 		JOIN Professori P ON Corsi.Professore = P.id
-- GROUP BY P.id,  Corsi.id
-- WHERE Attivato = 'true'
-- HAVING AVG(Voto) >= ALL (
-- 						SELECT AVG(Voto)
-- 						FROM Professori P1
-- 									JOIN Esami On Corsi.id
-- 						WHERE P1.id = P.id
-- 						);
